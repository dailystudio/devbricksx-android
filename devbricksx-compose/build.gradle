plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

android {
    compileSdkVersion COMPILE_SDK
    buildToolsVersion BUILD_TOOLS

    defaultConfig {
        namespace "com.dailystudio.devbricksx.compose"

        minSdkVersion 21
        targetSdkVersion TARGET_SDK
        versionCode VERSION_CODE
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation project(":devbricksx")

    def composeBom =
            platform("androidx.compose:compose-bom:${project.ext.composeBomVersion}")
    api composeBom
    androidTestApi composeBom

    // Material Design 3
    api 'androidx.compose.material3:material3'

    // Android Studio Preview support
    api 'androidx.compose.ui:ui-tooling-preview'
    debugApi 'androidx.compose.ui:ui-tooling'

    // UI Tests
    androidTestApi 'androidx.compose.ui:ui-test-junit4'
    debugApi 'androidx.compose.ui:ui-test-manifest'

    // Paging
    api "androidx.paging:paging-compose:${project.ext.pagingComposeVersion}"

    // Optional - Activity
    api "androidx.activity:activity-compose:${project.ext.activityComposeVersion}"
    // Optional - Integration with ViewModels
    api "androidx.lifecycle:lifecycle-viewmodel-compose:${project.ext.viewmodelComposeVersion}"
    // Optional - Integration with LiveData
    api 'androidx.compose.runtime:runtime-livedata'

    // Coil Compose
    api("io.coil-kt:coil-compose:${project.ext.coilComposeVersion}")
}

apply from: '../buildscripts/maven_push.gradle'